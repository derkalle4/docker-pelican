{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PANEL",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "name": "Call of Duty 1",
    "author": "support@kandru.de",
    "uuid": "344c7932-7772-489c-8864-c731b9b0e18b",
    "description": "Dockered Call of Duty 1 Server (Linux - see cod.pm for more information)",
    "features": [],
    "docker_images": {
        "docker-pelican-cod1 (latest)": "ghcr.io\/derkalle4\/docker-pelican-cod1:latest"
    },
    "file_denylist": [],
    "startup": "exec env - LD_PRELOAD=$HOME\/codextended.so $HOME\/cod_lnxded +set fs_homepath $HOME +set fs_basepath $HOME +set net_ip 0.0.0.0 +set net_port {{SERVER_PORT}} +exec dedicated.cfg +map mp_harbor < \/dev\/tty\n",
    "config": {
        "files": "{}",
        "startup": "{\n    \"done\": \"CoDMP.exe\"\n}",
        "logs": "{}",
        "stop": "quit"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# The wine generic server installer\r\n# This will just pull a download link and unpack it in directory if specified.\r\n\r\napt update -y\r\n\r\necho \"-----------------------------------------\"\r\necho \"Install Dependencies...\"\r\necho \"-----------------------------------------\"\r\napt install --no-install-recommends -y curl file unzip tar\r\n\r\nif [ ! -d \/mnt\/server ]; then\r\n    mkdir -p \/mnt\/server\/\r\nfi\r\n\r\nchown root:root \/mnt\/server\/\r\ncd \/mnt\/server\/\r\n\r\necho \"-----------------------------------------\"\r\necho \"Download call of duty 1 server...\"\r\necho \"-----------------------------------------\"\r\n\r\n# validate server link\r\necho \"downloading: ${DOWNLOAD_URL}\"\r\nif [ ! -z \"${DOWNLOAD_URL}\" ]; then \r\n    if curl --output \/dev\/null --silent --head --fail ${DOWNLOAD_URL}; then\r\n        echo -e \"link is valid. setting download link to ${DOWNLOAD_URL}\"\r\n        DOWNLOAD_LINK=${DOWNLOAD_URL}\r\n    else        \r\n        echo -e \"link is invalid closing out\"\r\n        exit 2\r\n    fi\r\nfi\r\n\r\ncurl -sSL# ${DOWNLOAD_LINK} -o ${DOWNLOAD_LINK##*\/}\r\n\r\n# unpack servver files\r\nFILETYPE=$(file -F ',' ${DOWNLOAD_LINK##*\/} | cut -d',' -f2 | cut -d' ' -f2)\r\n\r\nif [ \"$FILETYPE\" == \"gzip\" ]; then\r\n    tar xzvf ${DOWNLOAD_LINK##*\/}\r\nelif [ \"$FILETYPE\" == \"Zip\" ]; then\r\n    unzip -o ${DOWNLOAD_LINK##*\/}\r\nelif [ \"$FILETYPE\" == \"XZ\" ]; then\r\n    tar xvf ${DOWNLOAD_LINK##*\/}\r\nelse\r\n    echo -e \"unknown filetype. Exiting\"\r\n    exit 2 \r\nfi\r\n\r\nrm ${DOWNLOAD_LINK##*\/}\r\n\r\n# set permissions\r\nchmod +x .\/cod_lnxded\r\n\r\n## install end\r\necho \"-----------------------------------------\"\r\necho \"Installation completed...\"\r\necho \"-----------------------------------------\"\r\n\r\nsleep 5",
            "container": "ghcr.io\/parkervcp\/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "sort": 1,
            "name": "Server Download URL",
            "description": "URL with a .zip file which conains the server files.",
            "env_variable": "DOWNLOAD_URL",
            "default_value": "https:\/\/myurl\/call_of_duty_1_server_linux.zip",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string",
            "field_type": "text"
        }
    ]
}